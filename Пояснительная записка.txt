			Браузерная игра  на Flask «Ползун»
			   Баймухаметов Руслан Азатович

Пояснительная записка по теме "Браузерная игра на Flask «Ползун»":

Данный проект представляет собой браузерную игру на языке Python, написанную с использованием веб-фреймворка Flask. Игра реализована в виде приложения, которое запускается на сервере и взаимодействует с клиентом через HTTP-протокол.

Для реализации данного проекта были использованы следующие библиотеки:

1) Flask - веб-фреймворк для Python, который предоставляет множество инструментов и возможностей для создания веб-приложений.

2) Flask-Login - библиотека, предоставляющая механизм аутентификации пользователей в Flask-приложениях.

3) Flask-RESTful - расширение Flask для создания RESTful API, которое упрощает создание и обработку HTTP-запросов.

4) Flask-WTF - расширение Flask для работы с HTML-формами, которое позволяет легко создавать и валидировать формы.

5) SQLAlchemy - библиотека для работы с базами данных, которая предоставляет высокоуровневый интерфейс для создания, изменения и запросов данных.

6) SQLAlchemy-serializer - библиотека для сериализации и десериализации объектов SQLAlchemy.

7) WTForms - библиотека для создания и валидации HTML-форм на основе классов Python.

Цель данного проекта - создать игру "Ползун", в которой игрок управляет персонажем, ползущим вверх по вертикальному туннелю, избегая препятствий и собирая деньги. Игрок может заработать очки и деньги, которые можно потратить на покупку новых скинов для персонажа.

Для реализации игры были созданы модели базы данных с помощью SQLAlchemy, а также RESTful API для взаимодействия с клиентом. Flask-Login использовался для авторизации и аутентификации пользователей, а Flask-WTF и WTForms - для создания и валидации форм.

Игра была создана на Unity и собрана под WebGL

Unity - это популярный игровой движок, который используется для создания игр на различных платформах, включая веб-браузеры.

WebGL (Web Graphics Library) - это технология, которая позволяет запускать графику в веб-браузере без необходимости установки дополнительных плагинов или программ.

В результате получилась функциональная игра на Flask, которая может быть запущена на сервере и доступна для игры через веб-браузер.

сайт -- https://principled-holy-bottom.glitch.me/